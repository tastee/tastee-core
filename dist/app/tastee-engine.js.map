{"version":3,"sources":["app/tastee-engine.ts"],"names":[],"mappings":";;;;;;;;;;AACA,uDAAmD;AACnD,+CAA+C;AAC/C,kCAAkC;AAClC,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEjC;IAKI,YAAY,OAAe,EAAE,eAAwB,KAAK;QAEtD,IAAI,OAAO,EAAE;YACT,QAAQ,OAAO,EAAE;gBACb,KAAK,QAAQ;oBACT,IAAI,YAAY,EAAE;wBACd,IAAI,MAAM,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;wBAClD,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE;6BAC/B,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;6BAChD,gBAAgB,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;6BACjD,KAAK,EAAE,CAAC;qBAChB;yBACI;wBACD,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE;6BAC/B,UAAU,CAAC,QAAQ,CAAC;6BACpB,KAAK,EAAE,CAAC;qBAChB;oBACD,MAAM;gBACV,KAAK,SAAS;oBACV,IAAI,YAAY,EAAE;wBACd,IAAI,OAAO,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;wBACpD,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE;6BAC/B,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;6BACjD,iBAAiB,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;6BACnD,KAAK,EAAE,CAAC;qBAChB;yBACI;wBACD,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE;6BAC/B,UAAU,CAAC,SAAS,CAAC;6BACrB,KAAK,EAAE,CAAC;qBAChB;oBACD,MAAM;gBACV;oBACI,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE;yBAC/B,UAAU,CAAC,WAAW,CAAC;yBACvB,KAAK,EAAE,CAAC;oBACb,MAAM;aACb;SACJ;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,gCAAc,EAAE,CAAC;IACzC,CAAC;IAED,IAAI;QACA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEK,OAAO,CAAC,aAA4B,EAAE,cAAsB;;YAC9D,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QAC/C,CAAC;KAAA;IAEa,eAAe,CAAC,aAA4B,EAAE,mBAA2B,CAAC;;YACpF,IAAI,gBAAgB,KAAK,aAAa,CAAC,MAAM,EAAE;gBAC3C,OAAO,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;aACzC;YACD,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;YACvB,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;YACzB,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC7B,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC;YACxC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE/B,MAAM,WAAW,GAAG,aAAa,CAAC,gBAAgB,CAAC,CAAC;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACzC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;iBACzB,IAAI,CAAC,GAAG,EAAE;gBACP,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAA;gBAClC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,gBAAgB,GAAC,CAAC,CAAC,CAAC;YACnE,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK,CAAC,EAAE;gBACX,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC7C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACpB,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC5B,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,gBAAgB,GAAC,CAAC,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;QACX,CAAC;KAAA;CAEJ;AAnFD,oCAmFC","file":"tastee-engine.js","sourcesContent":["import { Instruction } from './instruction';\nimport { TasteeReporter } from './tastee-reporter';\nimport * as selenium from 'selenium-webdriver';\nimport * as logger from \"winston\";\nconst assert = require('assert');\n\nexport class TasteeEngine {\n\n    reporter: TasteeReporter;\n    driver: selenium.WebDriver;\n\n    constructor(browser: string, headlessMode: boolean = false) {\n\n        if (browser) {\n            switch (browser) {\n                case 'chrome':\n                    if (headlessMode) {\n                        var chrome = require('selenium-webdriver/chrome');\n                        this.driver = new selenium.Builder()\n                            .withCapabilities(selenium.Capabilities.chrome())\n                            .setChromeOptions(new chrome.Options().headless())\n                            .build();\n                    }\n                    else {\n                        this.driver = new selenium.Builder()\n                            .forBrowser('chrome')\n                            .build();\n                    }\n                    break;\n                case 'firefox':\n                    if (headlessMode) {\n                        var firefox = require('selenium-webdriver/firefox');\n                        this.driver = new selenium.Builder()\n                            .withCapabilities(selenium.Capabilities.firefox())\n                            .setFirefoxOptions(new firefox.Options().headless())\n                            .build();\n                    }\n                    else {\n                        this.driver = new selenium.Builder()\n                            .forBrowser('firefox')\n                            .build();\n                    }\n                    break;\n                default:\n                    this.driver = new selenium.Builder()\n                        .forBrowser('phantomjs')\n                        .build();\n                    break;\n            }\n        }\n        this.reporter = new TasteeReporter();\n    }\n\n    stop(): void {\n        this.driver.quit();\n    }\n\n    async execute(codeToExecute: Instruction[], tasteeFileName: string): Promise<Instruction[]> {\n        return this._executeCommand(codeToExecute);\n    }\n\n    private async _executeCommand(codeToExecute: Instruction[], currentLineIndex: number = 0) {\n        if (currentLineIndex === codeToExecute.length) {\n            return Promise.resolve(codeToExecute);\n        }\n        const By = selenium.By;\n        const Key = selenium.Key;\n        const until = selenium.until;\n        const Actions = selenium.ActionSequence;\n        const driver = this.driver;\n        const reporter = this.reporter;\n\n        const instruction = codeToExecute[currentLineIndex];\n        const result = eval(instruction.command);\n        return Promise.resolve(result)\n            .then(() => {\n                logger.debug('Execution SUCCESS.')\n                instruction.setValid(true);\n                return this._executeCommand(codeToExecute, currentLineIndex+1);\n            })\n            .catch(error => {\n                logger.debug('Execution FAILED : %s', error);\n                logger.error(error);\n                instruction.setValid(false);\n                instruction.setErrorMessage(error.message);\n                return this._executeCommand(codeToExecute, currentLineIndex+1);\n            });\n    }\n\n}\n\n"]}