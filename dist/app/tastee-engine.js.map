{"version":3,"sources":["app/tastee-engine.ts"],"names":[],"mappings":"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","file":"tastee-engine.js","sourcesContent":["import { Instruction } from './instruction';\nimport { TasteeReporter } from './tastee-reporter';\ndeclare var assert: any;\nvar assert = require('assert');\n\nexport class TasteeEngine {\n\n    webdriver = require('selenium-webdriver');\n    reporter: TasteeReporter;\n\n    driver: any;\n\n    constructor(browser: string, headlessMode: Boolean = false) {\n        if (browser) {\n            this.webdriver = require('selenium-webdriver');\n            switch (browser) {\n                case 'chrome':\n                    var path = require('chromedriver').path;\n                    console.log('driver use : ' + path);\n                    if (headlessMode) {\n                        var chrome = require('selenium-webdriver/chrome');\n                        this.driver = new this.webdriver.Builder()\n                            .withCapabilities(this.webdriver.Capabilities.chrome())\n                            .setChromeOptions(new chrome.Options().headless())\n                            .build();\n                    }\n                    else {\n                        this.driver = new this.webdriver.Builder()\n                            .forBrowser('chrome')\n                            .build();\n                    }\n                    break;\n                case 'firefox':\n                    var path = require('geckodriver').path;\n                    console.log('driver use : ' + path);\n                    if (headlessMode) {\n                        var firefox = require('selenium-webdriver/firefox');\n                        this.driver = new this.webdriver.Builder()\n                            .withCapabilities(this.webdriver.Capabilities.firefox())\n                            .setFirefoxOptions(new firefox.Options().headless())\n                            .build();\n                    }\n                    else {\n                        var firefox = require('selenium-webdriver/firefox');\n                        this.driver = new this.webdriver.Builder()\n                            .forBrowser('firefox')\n                            .setFirefoxOptions(new firefox.Options().useGeckoDriver(false))\n                            .build();\n                    }\n                    break;\n            }\n        }\n        this.reporter = new TasteeReporter();\n    }\n\n    stop(): void {\n        this.driver.quit();\n    }\n\n    async execute(codeToExecute: Instruction[], tasteeFileName: string): Promise<Instruction[]> {\n        var By = this.webdriver.By;\n        var Key = this.webdriver.Key;\n        var until = this.webdriver.until;\n        var Actions = this.webdriver.Actions;\n        let driver = this.driver;\n        let reporter = this.reporter;\n        for (var idx = 0; idx < codeToExecute.length; idx++) {\n            try {\n                await eval(codeToExecute[idx].command);\n                await codeToExecute[idx].setValid(true);\n            } catch (error) {\n                console.log(error);\n                await codeToExecute[idx].setValid(false);\n                await codeToExecute[idx].setErrorMessage(error.message);\n            }\n        }\n        return codeToExecute;\n    }\n\n}\n\n"]}