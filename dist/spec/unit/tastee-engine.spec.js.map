{"version":3,"sources":["spec/unit/tastee-engine.spec.ts"],"names":[],"mappings":";AAAA,uCAAuC;;AAEvC,2DAAuD;AACvD,uDAAoD;AAEpD,kCAAkC;AAClC,8BAA8B;AAE9B,QAAQ,CAAC,eAAe,EAAE;IACtB,IAAI,MAAoB,CAAC;IAEzB,MAAM,CAAC,SAAS,CAAC;QACb,KAAK,EAAE,OAAO;QACd,UAAU,EAAE;YACR,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;gBAC1B,QAAQ,EAAE,IAAI;aACjB,CAAC;SACL;KACJ,CAAC,CAAC;IAEH,UAAU,CAAC;QACP,MAAM,GAAG,IAAI,4BAAY,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;IACvC,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,iCAAiC,EAAE;QAClC,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE;QAC1B,IAAI,GAAG,GAAG,CAAC,CAAA;QACX,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9C,IAAI,WAAW,GAAG,IAAI,yBAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAExD,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,EAAE,kBAAkB,CAAC,CAAC;QAElD,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,IAAI,OAAO,GAAG;IACV,WAAW;QACP,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACtB,CAAC;CACJ,CAAA;AAED;IAGI,OAAO,CAAC,QAAQ;QACZ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;CACJ","file":"tastee-engine.spec.js","sourcesContent":["/* tslint:disable:no-unused-variable */\n\nimport { TasteeEngine } from \"../../app/tastee-engine\";\nimport { Instruction } from \"../../app/instruction\";\n\nimport * as logger from \"winston\";\n////////  SPECS  /////////////\n\ndescribe('Tastee Engine', function () {\n    let engine: TasteeEngine;\n\n    logger.configure({\n        level: 'debug',\n        transports: [\n            new logger.transports.Console({\n                colorize: true\n            })\n        ]\n    });\n\n    beforeEach(function () {\n        engine = new TasteeEngine(null);\n        let driver = jasmine.createSpyObj(\"driver\", [\"quit\"]);\n        engine.driver = driver;\n        engine.webdriver.promise = promise;\n    });\n\n\n    it(\" quits selenium driver properly\", function () {\n        engine.stop();\n        expect(engine.driver.quit).toHaveBeenCalled();\n    });\n\n    it(\" execute simple js code\", function () {\n        var sum = 0\n        engine.webdriver.By = () => { sum = +1 + 1; };\n\n        let instruction = new Instruction(1, 'a line', 'By();');\n\n        engine.execute([instruction], \"nameOfTasteeFile\");\n\n        expect(sum).toBe(2);\n    });\n\n});\n\nlet promise = {\n    controlFlow() {\n        return new Flow();\n    }\n}\n\nclass Flow {\n    jasmineCallback: any;\n\n    execute(callback) {\n        this.jasmineCallback = callback;\n        this.jasmineCallback('execute');\n        return new Promise(this.jasmineCallback);\n    }\n}"]}