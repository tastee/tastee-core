{"version":3,"sources":["spec/it/tastee-core.spec.ts"],"names":[],"mappings":";;AAAA,uDAAmD;AACnD,+DAA2D;AAC3D,2DAAuD;AAEvD,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEvB,QAAQ,CAAC,oBAAoB,EAAE;IAC3B,IAAI,IAAgB,CAAC;IACrB,UAAU,CAAC;QACP,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACzC,MAAM,MAAM,GAAG,IAAI,4BAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,GAAG,IAAI,wBAAU,CAAC,IAAI,gCAAc,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,mCAAmC,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,4CAA4C,CAAC,CAAC;QACjE,IAAI,CAAC,YAAY,CAAC,8CAA8C,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,UAAU,IAAI;QACjD,MAAM,YAAY,GAAG;YACjB,gDAAgD;YAChD,mDAAmD;SACtD,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC5B,IAAI,EAAE,CAAC;aACV;iBAAM;gBACH,IAAI,EAAE,CAAC;aACV;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,UAAU,IAAI;QAC1D,IAAI,YAAY,GAAG;YACf,0BAA0B;YAC1B,uDAAuD;SAC1D,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC5B,IAAI,EAAE,CAAC;aACV;iBAAM;gBACH,IAAI,EAAE,CAAC;aACV;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,UAAU,IAAI;QAChD,EAAE,CAAC,QAAQ,CAAC,sCAAsC,EAAE,MAAM,EAAE,UAAU,GAAG,EAAE,IAAI;YAC3E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACnC,IAAI,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpE,IAAI,EAAE,CAAC;iBACV;YACL,CAAC,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","file":"tastee-core.spec.js","sourcesContent":["import { TasteeCore } from \"../../app/tastee-core\";\nimport { TasteeAnalyser } from \"../../app/tastee-analyser\";\nimport { TasteeEngine } from \"../../app/tastee-engine\";\n\nvar fs = require(\"fs\");\n\ndescribe(\"Tastee Core Engine\", function () {\n    let core: TasteeCore;\n    beforeEach(function () {\n        jasmine.DEFAULT_TIMEOUT_INTERVAL = 20000;\n        const engine = new TasteeEngine('phantomjs', true);\n        core = new TasteeCore(new TasteeAnalyser());\n        core.init(engine);\n        core.addPluginFile('./plugin/common-instructions.yaml');\n        core.addPluginFile('./src/spec/examples/test-instructions.yaml');\n        core.addParamFile('./src/spec/examples/my-parameters.properties');\n    });\n\n    afterEach(function () {\n        core.stop();\n    })\n\n    it(\"will test a simple tastee script\", function (done) {\n        const instructions = [\n            \"go to 'https://en.wikipedia.org/wiki/Selenium'\",\n            \"check that '.firstHeading' is equal to 'Selenium'\"\n        ];\n\n        core.execute(instructions.join('\\n')).then(result => {\n            if (result.some(i => !i.valid)) {\n                fail();\n            } else {\n                done();\n            }\n        });\n    });\n\n    it(\"will test a tastee script with parameters\", function (done) {\n        let instructions = [\n            \"go to wikipedia.Selenium\",\n            \"check that wikipedia.title is equal to selenium.title\"\n        ];\n        core.execute(instructions.join('\\n')).then(result => {\n            if (result.some(i => !i.valid)) {\n                fail();\n            } else {\n                done();\n            }\n        });\n    });\n\n    it(\"will test a more complex tastee\", function (done) {\n        fs.readFile(\"./src/spec/examples/test-script.html\", \"utf8\", function (err, data) {\n            core.execute(data).then(instructions => {\n                if (instructions.filter(instruction => !instruction.valid).length == 0) {\n                    done();\n                }\n            });\n\n        });\n    });\n\n});\n"]}