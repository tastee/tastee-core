{"version":3,"sources":["spec/it/tastee-core.spec.ts"],"names":[],"mappings":";;AAAA,uDAAmD;AACnD,+DAA2D;AAC3D,2DAAuD;AAGvD,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEvB,QAAQ,CAAC,oBAAoB,EAAE;IAC3B,IAAI,IAAgB,CAAC;IACrB,UAAU,CAAC,UAAU,IAAI;QACrB,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACzC,IAAI,MAAM,GAAG,IAAI,4BAAY,CAAE,KAAK,CAAC,CAAC;QACtC,IAAI,GAAG,IAAI,wBAAU,CAAC,IAAI,gCAAc,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,+CAA+C;QAC/C,IAAI,CAAC,aAAa,CAAC,mCAAmC,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,4CAA4C,EAAE;gBAC7D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,8CAA8C,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,UAAU,IAAI;QACjD,IAAI,CAAC,OAAO,CAAC,gDAAgD,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrE,IAAI,CAAC,OAAO,CAAC,mDAAmD,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBAClF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACxB,IAAI,EAAE,CAAC;gBACX,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAIH,EAAE,CAAC,2CAA2C,EAAE,UAAU,IAAI;QAC1D,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,uDAAuD,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACtF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACxB,IAAI,EAAE,CAAC;gBACX,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,UAAU,IAAI;QAChD,EAAE,CAAC,QAAQ,CAAC,sCAAsC,EAAE,MAAM,EAAE,UAAU,GAAG,EAAE,IAAI;YAC3E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACnC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrE,IAAI,EAAE,CAAC;gBACX,CAAC;YACL,CAAC,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","file":"tastee-core.spec.js","sourcesContent":["import { TasteeCore } from \"../../app/tastee-core\";\nimport { TasteeAnalyser } from \"../../app/tastee-analyser\";\nimport { TasteeEngine } from \"../../app/tastee-engine\";\nimport { Instruction } from \"app/instruction\";\n\nvar fs = require(\"fs\");\n\ndescribe(\"Tastee Core Engine\", function () {\n    let core: TasteeCore;\n    beforeEach(function (done) {\n        jasmine.DEFAULT_TIMEOUT_INTERVAL = 20000;\n        let engine = new TasteeEngine( false);\n        core = new TasteeCore(new TasteeAnalyser());\n        core.init(engine);\n        //load asynchronous analyser, then launch tests\n        core.addPluginFile('./plugin/common-instructions.yaml', function () {\n            core.addPluginFile('./src/spec/examples/test-instructions.yaml', function () {\n                done();\n            });\n        });\n        core.addParamFile('./src/spec/examples/my-parameters.properties');\n    });\n\n    afterEach(function () {\n        core.stop();\n    })\n\n    it(\"will test a simple tastee script\", function (done) {\n        core.execute(\"go to 'https://en.wikipedia.org/wiki/Selenium'\").then(() => {\n            core.execute(\"check that '.firstHeading' is equal to 'Selenium'\").then(instructions => {\n                if (instructions[0].valid) {\n                    done();\n                }\n            });\n        });\n    });\n\n\n\n    it(\"will test a tastee script with parameters\", function (done) {\n        core.execute(\"go to wikipedia.Selenium\").then(() => {\n            core.execute(\"check that wikipedia.title is equal to selenium.title\").then(instructions => {\n                if (instructions[0].valid) {\n                    done();\n                }\n            });\n        });\n    });\n\n    it(\"will test a more complex tastee\", function (done) {\n        fs.readFile(\"./src/spec/examples/test-script.html\", \"utf8\", function (err, data) {\n            core.execute(data).then(instructions => {\n                if (instructions.filter(instruction => !instruction.valid).length == 0) {\n                    done();\n                }\n            });\n\n        });\n    });\n\n});\n"]}