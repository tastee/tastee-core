{"version":3,"sources":["spec/it/authentication-BWR.spec.ts"],"names":[],"mappings":";;AAAA,uDAAmD;AACnD,+DAA2D;AAC3D,2DAAuD;AAEvD,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE/B,MAAM,IAAI,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC9C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEvB,SAAS,CAAC,oBAAoB,EAAE;IAE5B,IAAI,IAAgB,CAAC;IACrB,UAAU,CAAC,UAAU,IAAI;QACrB,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACzC,IAAI,MAAM,GAAG,IAAI,4BAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,GAAG,IAAI,wBAAU,CAAC,IAAI,gCAAc,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,+CAA+C;QAC/C,IAAI,CAAC,aAAa,CAAC,mCAAmC,EAAE,GAAG,EAAE;YACzD,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,8CAA8C,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,mDAAmD,EAAE,UAAU,IAAI;QAElE,EAAE,CAAC,QAAQ,CAAC,4DAA4D,EAAE,MAAM,EAAE,UAAU,GAAG,EAAE,IAAI;YAEjG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAClC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;oBAC/C,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY,GAAG,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC5J;YACL,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,CAAA;AAEN,CAAC,CAAC,CAAC","file":"authentication-BWR.spec.js","sourcesContent":["import { TasteeCore } from \"../../app/tastee-core\";\nimport { TasteeAnalyser } from \"../../app/tastee-analyser\";\nimport { TasteeEngine } from \"../../app/tastee-engine\";\n\nvar assert = require(\"assert\");\n\nconst core = require('../../app/tastee-core');\nvar fs = require(\"fs\");\n\nxdescribe(\"Tastee Core Engine\", function () {\n\n    let core: TasteeCore;\n    beforeEach(function (done) {\n        jasmine.DEFAULT_TIMEOUT_INTERVAL = 20000;\n        let engine = new TasteeEngine('phantomjs', true);\n        core = new TasteeCore(new TasteeAnalyser());\n        core.init(engine);\n        //load asynchronous analyser, then launch tests\n        core.addPluginFile('./plugin/common-instructions.yaml', () => {\n            done();\n        });\n        core.addParamFile('./src/spec/examples/my-parameters.properties');\n    });\n\n    afterEach(function () {\n        core.stop();\n    })\n\n    it(\"will test authentication with browser-like script\", function (done) {\n\n        fs.readFile(\"./src/spec/examples/authentication/authentication-BWR.html\", \"utf8\", function (err, data) {\n\n            core.execute(data).then(returnValue => {\n                for (var idx = 0; idx < returnValue.length; idx++) {\n                    assert.equal(returnValue[idx].valid, true, 'At line ' + returnValue[idx].lineNumber + ' : ' + returnValue[idx].errorMessage + '\\n=>' + returnValue[idx]);\n                }\n            });\n            return done();\n        });\n\n    })\n\n});\n"]}